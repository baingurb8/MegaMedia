// <auto-generated />
using System;
using MegaMedia.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MegaMedia.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("MegaMedia.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Studio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MegaMedia.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MegaMedia.Models.VideoGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("VideoGames");
                });

            modelBuilder.Entity("MovieUser", b =>
                {
                    b.Property<int>("RentedMoviesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersWhoRentedMoviesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RentedMoviesId", "UsersWhoRentedMoviesId");

                    b.HasIndex("UsersWhoRentedMoviesId");

                    b.ToTable("MovieUser");
                });

            modelBuilder.Entity("UserVideoGame", b =>
                {
                    b.Property<int>("RentedGamesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersWhoRentedGamesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RentedGamesId", "UsersWhoRentedGamesId");

                    b.HasIndex("UsersWhoRentedGamesId");

                    b.ToTable("UserVideoGame");
                });

            modelBuilder.Entity("MovieUser", b =>
                {
                    b.HasOne("MegaMedia.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("RentedMoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MegaMedia.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersWhoRentedMoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserVideoGame", b =>
                {
                    b.HasOne("MegaMedia.Models.VideoGame", null)
                        .WithMany()
                        .HasForeignKey("RentedGamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MegaMedia.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersWhoRentedGamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
